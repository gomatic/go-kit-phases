// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.21.12
// source: self.proto

package moody

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Anger_Feeling int32

const (
	Anger_ANNOYED    Anger_Feeling = 0
	Anger_FRUSTRATED Anger_Feeling = 1
	Anger_PEEVED     Anger_Feeling = 2
	Anger_CONTRARY   Anger_Feeling = 3
	Anger_BITTER     Anger_Feeling = 4
	Anger_INFURIATED Anger_Feeling = 5
	Anger_IRRITATED  Anger_Feeling = 6
	Anger_MAD        Anger_Feeling = 7
	Anger_CHEATED    Anger_Feeling = 8
	Anger_VENGEFUL   Anger_Feeling = 9
	Anger_INSULTED   Anger_Feeling = 10
)

// Enum value maps for Anger_Feeling.
var (
	Anger_Feeling_name = map[int32]string{
		0:  "ANNOYED",
		1:  "FRUSTRATED",
		2:  "PEEVED",
		3:  "CONTRARY",
		4:  "BITTER",
		5:  "INFURIATED",
		6:  "IRRITATED",
		7:  "MAD",
		8:  "CHEATED",
		9:  "VENGEFUL",
		10: "INSULTED",
	}
	Anger_Feeling_value = map[string]int32{
		"ANNOYED":    0,
		"FRUSTRATED": 1,
		"PEEVED":     2,
		"CONTRARY":   3,
		"BITTER":     4,
		"INFURIATED": 5,
		"IRRITATED":  6,
		"MAD":        7,
		"CHEATED":    8,
		"VENGEFUL":   9,
		"INSULTED":   10,
	}
)

func (x Anger_Feeling) Enum() *Anger_Feeling {
	p := new(Anger_Feeling)
	*p = x
	return p
}

func (x Anger_Feeling) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Anger_Feeling) Descriptor() protoreflect.EnumDescriptor {
	return file_self_proto_enumTypes[0].Descriptor()
}

func (Anger_Feeling) Type() protoreflect.EnumType {
	return &file_self_proto_enumTypes[0]
}

func (x Anger_Feeling) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Anger_Feeling.Descriptor instead.
func (Anger_Feeling) EnumDescriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{4, 0}
}

type Fear_Feeling int32

const (
	Fear_WORRIED   Fear_Feeling = 0
	Fear_DOUBTFUL  Fear_Feeling = 1
	Fear_NERVOUS   Fear_Feeling = 2
	Fear_ANXIOUS   Fear_Feeling = 3
	Fear_TERRIFIED Fear_Feeling = 4
	Fear_PANICKED  Fear_Feeling = 5
	Fear_HORRIFIED Fear_Feeling = 6
	Fear_DESPERATE Fear_Feeling = 7
	Fear_CONFUSED  Fear_Feeling = 8
	Fear_STRESSED  Fear_Feeling = 9
)

// Enum value maps for Fear_Feeling.
var (
	Fear_Feeling_name = map[int32]string{
		0: "WORRIED",
		1: "DOUBTFUL",
		2: "NERVOUS",
		3: "ANXIOUS",
		4: "TERRIFIED",
		5: "PANICKED",
		6: "HORRIFIED",
		7: "DESPERATE",
		8: "CONFUSED",
		9: "STRESSED",
	}
	Fear_Feeling_value = map[string]int32{
		"WORRIED":   0,
		"DOUBTFUL":  1,
		"NERVOUS":   2,
		"ANXIOUS":   3,
		"TERRIFIED": 4,
		"PANICKED":  5,
		"HORRIFIED": 6,
		"DESPERATE": 7,
		"CONFUSED":  8,
		"STRESSED":  9,
	}
)

func (x Fear_Feeling) Enum() *Fear_Feeling {
	p := new(Fear_Feeling)
	*p = x
	return p
}

func (x Fear_Feeling) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Fear_Feeling) Descriptor() protoreflect.EnumDescriptor {
	return file_self_proto_enumTypes[1].Descriptor()
}

func (Fear_Feeling) Type() protoreflect.EnumType {
	return &file_self_proto_enumTypes[1]
}

func (x Fear_Feeling) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Fear_Feeling.Descriptor instead.
func (Fear_Feeling) EnumDescriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{5, 0}
}

type Sadness_Feeling int32

const (
	Sadness_LONELY       Sadness_Feeling = 0
	Sadness_HEARTBROKEN  Sadness_Feeling = 1
	Sadness_GLOOMY       Sadness_Feeling = 2
	Sadness_DISAPPOINTED Sadness_Feeling = 3
	Sadness_HOPELESS     Sadness_Feeling = 4
	Sadness_GRIEVED      Sadness_Feeling = 5
	Sadness_UNHAPPY      Sadness_Feeling = 6
	Sadness_LOST         Sadness_Feeling = 7
	Sadness_TROUBLED     Sadness_Feeling = 8
	Sadness_RESIGNED     Sadness_Feeling = 9
	Sadness_MISERABLE    Sadness_Feeling = 10
)

// Enum value maps for Sadness_Feeling.
var (
	Sadness_Feeling_name = map[int32]string{
		0:  "LONELY",
		1:  "HEARTBROKEN",
		2:  "GLOOMY",
		3:  "DISAPPOINTED",
		4:  "HOPELESS",
		5:  "GRIEVED",
		6:  "UNHAPPY",
		7:  "LOST",
		8:  "TROUBLED",
		9:  "RESIGNED",
		10: "MISERABLE",
	}
	Sadness_Feeling_value = map[string]int32{
		"LONELY":       0,
		"HEARTBROKEN":  1,
		"GLOOMY":       2,
		"DISAPPOINTED": 3,
		"HOPELESS":     4,
		"GRIEVED":      5,
		"UNHAPPY":      6,
		"LOST":         7,
		"TROUBLED":     8,
		"RESIGNED":     9,
		"MISERABLE":    10,
	}
)

func (x Sadness_Feeling) Enum() *Sadness_Feeling {
	p := new(Sadness_Feeling)
	*p = x
	return p
}

func (x Sadness_Feeling) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sadness_Feeling) Descriptor() protoreflect.EnumDescriptor {
	return file_self_proto_enumTypes[2].Descriptor()
}

func (Sadness_Feeling) Type() protoreflect.EnumType {
	return &file_self_proto_enumTypes[2]
}

func (x Sadness_Feeling) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sadness_Feeling.Descriptor instead.
func (Sadness_Feeling) EnumDescriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{6, 0}
}

type Disgust_Feeling int32

const (
	Disgust_DISLIKE       Disgust_Feeling = 0
	Disgust_REVULSION     Disgust_Feeling = 1
	Disgust_LOATHING      Disgust_Feeling = 2
	Disgust_DISAPPROVING  Disgust_Feeling = 4
	Disgust_OFFENDED      Disgust_Feeling = 5
	Disgust_HORRIFIED     Disgust_Feeling = 6
	Disgust_UNCOMFORTABLE Disgust_Feeling = 7
	Disgust_NAUSEATED     Disgust_Feeling = 8
	Disgust_DISTURBED     Disgust_Feeling = 9
	Disgust_WITHDRAWAL    Disgust_Feeling = 10
	Disgust_AVERSION      Disgust_Feeling = 11
)

// Enum value maps for Disgust_Feeling.
var (
	Disgust_Feeling_name = map[int32]string{
		0:  "DISLIKE",
		1:  "REVULSION",
		2:  "LOATHING",
		4:  "DISAPPROVING",
		5:  "OFFENDED",
		6:  "HORRIFIED",
		7:  "UNCOMFORTABLE",
		8:  "NAUSEATED",
		9:  "DISTURBED",
		10: "WITHDRAWAL",
		11: "AVERSION",
	}
	Disgust_Feeling_value = map[string]int32{
		"DISLIKE":       0,
		"REVULSION":     1,
		"LOATHING":      2,
		"DISAPPROVING":  4,
		"OFFENDED":      5,
		"HORRIFIED":     6,
		"UNCOMFORTABLE": 7,
		"NAUSEATED":     8,
		"DISTURBED":     9,
		"WITHDRAWAL":    10,
		"AVERSION":      11,
	}
)

func (x Disgust_Feeling) Enum() *Disgust_Feeling {
	p := new(Disgust_Feeling)
	*p = x
	return p
}

func (x Disgust_Feeling) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Disgust_Feeling) Descriptor() protoreflect.EnumDescriptor {
	return file_self_proto_enumTypes[3].Descriptor()
}

func (Disgust_Feeling) Type() protoreflect.EnumType {
	return &file_self_proto_enumTypes[3]
}

func (x Disgust_Feeling) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Disgust_Feeling.Descriptor instead.
func (Disgust_Feeling) EnumDescriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{7, 0}
}

type Enjoyment_Feeling int32

const (
	Enjoyment_HAPPINESS    Enjoyment_Feeling = 0
	Enjoyment_LOVE         Enjoyment_Feeling = 1
	Enjoyment_RELIEF       Enjoyment_Feeling = 2
	Enjoyment_CONTENTMENT  Enjoyment_Feeling = 3
	Enjoyment_AMUSEMENT    Enjoyment_Feeling = 4
	Enjoyment_JOY          Enjoyment_Feeling = 5
	Enjoyment_PRIDE        Enjoyment_Feeling = 6
	Enjoyment_EXCITEMENT   Enjoyment_Feeling = 7
	Enjoyment_PEACE        Enjoyment_Feeling = 8
	Enjoyment_SATISFACTION Enjoyment_Feeling = 9
	Enjoyment_COMPASSION   Enjoyment_Feeling = 10
)

// Enum value maps for Enjoyment_Feeling.
var (
	Enjoyment_Feeling_name = map[int32]string{
		0:  "HAPPINESS",
		1:  "LOVE",
		2:  "RELIEF",
		3:  "CONTENTMENT",
		4:  "AMUSEMENT",
		5:  "JOY",
		6:  "PRIDE",
		7:  "EXCITEMENT",
		8:  "PEACE",
		9:  "SATISFACTION",
		10: "COMPASSION",
	}
	Enjoyment_Feeling_value = map[string]int32{
		"HAPPINESS":    0,
		"LOVE":         1,
		"RELIEF":       2,
		"CONTENTMENT":  3,
		"AMUSEMENT":    4,
		"JOY":          5,
		"PRIDE":        6,
		"EXCITEMENT":   7,
		"PEACE":        8,
		"SATISFACTION": 9,
		"COMPASSION":   10,
	}
)

func (x Enjoyment_Feeling) Enum() *Enjoyment_Feeling {
	p := new(Enjoyment_Feeling)
	*p = x
	return p
}

func (x Enjoyment_Feeling) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enjoyment_Feeling) Descriptor() protoreflect.EnumDescriptor {
	return file_self_proto_enumTypes[4].Descriptor()
}

func (Enjoyment_Feeling) Type() protoreflect.EnumType {
	return &file_self_proto_enumTypes[4]
}

func (x Enjoyment_Feeling) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enjoyment_Feeling.Descriptor instead.
func (Enjoyment_Feeling) EnumDescriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{8, 0}
}

type Feeling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enjoyment *Enjoyment `protobuf:"bytes,1,opt,name=enjoyment,proto3" json:"enjoyment,omitempty"`
	Anger     *Anger     `protobuf:"bytes,2,opt,name=anger,proto3" json:"anger,omitempty"`
	Fear      *Fear      `protobuf:"bytes,3,opt,name=fear,proto3" json:"fear,omitempty"`
	Sadness   *Sadness   `protobuf:"bytes,4,opt,name=sadness,proto3" json:"sadness,omitempty"`
	Disgust   *Disgust   `protobuf:"bytes,5,opt,name=disgust,proto3" json:"disgust,omitempty"`
	Date      uint64     `protobuf:"varint,10,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Feeling) Reset() {
	*x = Feeling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_self_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feeling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feeling) ProtoMessage() {}

func (x *Feeling) ProtoReflect() protoreflect.Message {
	mi := &file_self_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feeling.ProtoReflect.Descriptor instead.
func (*Feeling) Descriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{0}
}

func (x *Feeling) GetEnjoyment() *Enjoyment {
	if x != nil {
		return x.Enjoyment
	}
	return nil
}

func (x *Feeling) GetAnger() *Anger {
	if x != nil {
		return x.Anger
	}
	return nil
}

func (x *Feeling) GetFear() *Fear {
	if x != nil {
		return x.Fear
	}
	return nil
}

func (x *Feeling) GetSadness() *Sadness {
	if x != nil {
		return x.Sadness
	}
	return nil
}

func (x *Feeling) GetDisgust() *Disgust {
	if x != nil {
		return x.Disgust
	}
	return nil
}

func (x *Feeling) GetDate() uint64 {
	if x != nil {
		return x.Date
	}
	return 0
}

type Overall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date    uint64  `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Average float64 `protobuf:"fixed64,2,opt,name=average,proto3" json:"average,omitempty"`
}

func (x *Overall) Reset() {
	*x = Overall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_self_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Overall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Overall) ProtoMessage() {}

func (x *Overall) ProtoReflect() protoreflect.Message {
	mi := &file_self_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Overall.ProtoReflect.Descriptor instead.
func (*Overall) Descriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{1}
}

func (x *Overall) GetDate() uint64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *Overall) GetAverage() float64 {
	if x != nil {
		return x.Average
	}
	return 0
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeling *Feeling `protobuf:"bytes,1,opt,name=feeling,proto3" json:"feeling,omitempty"`
	Overall *Overall `protobuf:"bytes,2,opt,name=overall,proto3" json:"overall,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_self_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_self_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{2}
}

func (x *Query) GetFeeling() *Feeling {
	if x != nil {
		return x.Feeling
	}
	return nil
}

func (x *Query) GetOverall() *Overall {
	if x != nil {
		return x.Overall
	}
	return nil
}

type Complicated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeling []*Feeling `protobuf:"bytes,1,rep,name=feeling,proto3" json:"feeling,omitempty"`
}

func (x *Complicated) Reset() {
	*x = Complicated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_self_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complicated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complicated) ProtoMessage() {}

func (x *Complicated) ProtoReflect() protoreflect.Message {
	mi := &file_self_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complicated.ProtoReflect.Descriptor instead.
func (*Complicated) Descriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{3}
}

func (x *Complicated) GetFeeling() []*Feeling {
	if x != nil {
		return x.Feeling
	}
	return nil
}

type Anger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeling Anger_Feeling `protobuf:"varint,1,opt,name=feeling,proto3,enum=moody.Anger_Feeling" json:"feeling,omitempty"`
	Level   float64       `protobuf:"fixed64,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Anger) Reset() {
	*x = Anger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_self_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Anger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Anger) ProtoMessage() {}

func (x *Anger) ProtoReflect() protoreflect.Message {
	mi := &file_self_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Anger.ProtoReflect.Descriptor instead.
func (*Anger) Descriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{4}
}

func (x *Anger) GetFeeling() Anger_Feeling {
	if x != nil {
		return x.Feeling
	}
	return Anger_ANNOYED
}

func (x *Anger) GetLevel() float64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type Fear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeling Fear_Feeling `protobuf:"varint,1,opt,name=feeling,proto3,enum=moody.Fear_Feeling" json:"feeling,omitempty"`
	Level   float64      `protobuf:"fixed64,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Fear) Reset() {
	*x = Fear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_self_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fear) ProtoMessage() {}

func (x *Fear) ProtoReflect() protoreflect.Message {
	mi := &file_self_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fear.ProtoReflect.Descriptor instead.
func (*Fear) Descriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{5}
}

func (x *Fear) GetFeeling() Fear_Feeling {
	if x != nil {
		return x.Feeling
	}
	return Fear_WORRIED
}

func (x *Fear) GetLevel() float64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type Sadness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeling Sadness_Feeling `protobuf:"varint,1,opt,name=feeling,proto3,enum=moody.Sadness_Feeling" json:"feeling,omitempty"`
	Level   float64         `protobuf:"fixed64,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Sadness) Reset() {
	*x = Sadness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_self_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sadness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sadness) ProtoMessage() {}

func (x *Sadness) ProtoReflect() protoreflect.Message {
	mi := &file_self_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sadness.ProtoReflect.Descriptor instead.
func (*Sadness) Descriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{6}
}

func (x *Sadness) GetFeeling() Sadness_Feeling {
	if x != nil {
		return x.Feeling
	}
	return Sadness_LONELY
}

func (x *Sadness) GetLevel() float64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type Disgust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeling Disgust_Feeling `protobuf:"varint,1,opt,name=feeling,proto3,enum=moody.Disgust_Feeling" json:"feeling,omitempty"`
	Level   float64         `protobuf:"fixed64,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Disgust) Reset() {
	*x = Disgust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_self_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disgust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disgust) ProtoMessage() {}

func (x *Disgust) ProtoReflect() protoreflect.Message {
	mi := &file_self_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disgust.ProtoReflect.Descriptor instead.
func (*Disgust) Descriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{7}
}

func (x *Disgust) GetFeeling() Disgust_Feeling {
	if x != nil {
		return x.Feeling
	}
	return Disgust_DISLIKE
}

func (x *Disgust) GetLevel() float64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type Enjoyment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeling Enjoyment_Feeling `protobuf:"varint,1,opt,name=feeling,proto3,enum=moody.Enjoyment_Feeling" json:"feeling,omitempty"`
	Level   float64           `protobuf:"fixed64,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Enjoyment) Reset() {
	*x = Enjoyment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_self_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enjoyment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enjoyment) ProtoMessage() {}

func (x *Enjoyment) ProtoReflect() protoreflect.Message {
	mi := &file_self_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enjoyment.ProtoReflect.Descriptor instead.
func (*Enjoyment) Descriptor() ([]byte, []int) {
	return file_self_proto_rawDescGZIP(), []int{8}
}

func (x *Enjoyment) GetFeeling() Enjoyment_Feeling {
	if x != nil {
		return x.Feeling
	}
	return Enjoyment_HAPPINESS
}

func (x *Enjoyment) GetLevel() float64 {
	if x != nil {
		return x.Level
	}
	return 0
}

var File_self_proto protoreflect.FileDescriptor

var file_self_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f,
	0x6f, 0x64, 0x79, 0x22, 0xe6, 0x01, 0x0a, 0x07, 0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12,
	0x2e, 0x0a, 0x09, 0x65, 0x6e, 0x6a, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x6a, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x41, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x05, 0x61, 0x6e,
	0x67, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x46, 0x65, 0x61, 0x72, 0x52, 0x04,
	0x66, 0x65, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x07, 0x73, 0x61, 0x64, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x53, 0x61,
	0x64, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x07, 0x73, 0x61, 0x64, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x28,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x67, 0x75, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x44, 0x69, 0x73, 0x67, 0x75, 0x73, 0x74, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x67, 0x75, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x07,
	0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x28,
	0x0a, 0x07, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x07, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x6f, 0x64,
	0x79, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x52, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x22, 0x37, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x28, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x6c, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0xed, 0x01, 0x0a, 0x05,
	0x41, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x41,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x65,
	0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x9d, 0x01, 0x0a, 0x07,
	0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e, 0x4e, 0x4f, 0x59,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x52, 0x55, 0x53, 0x54, 0x52, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x45, 0x45, 0x56, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x52, 0x59, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x42, 0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e,
	0x46, 0x55, 0x52, 0x49, 0x41, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x52,
	0x52, 0x49, 0x54, 0x41, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x44,
	0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x48, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x08, 0x12,
	0x0c, 0x0a, 0x08, 0x56, 0x45, 0x4e, 0x47, 0x45, 0x46, 0x55, 0x4c, 0x10, 0x09, 0x12, 0x0c, 0x0a,
	0x08, 0x49, 0x4e, 0x53, 0x55, 0x4c, 0x54, 0x45, 0x44, 0x10, 0x0a, 0x22, 0xe3, 0x01, 0x0a, 0x04,
	0x46, 0x65, 0x61, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x46, 0x65,
	0x61, 0x72, 0x2e, 0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x65, 0x65, 0x6c,
	0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x95, 0x01, 0x0a, 0x07, 0x46, 0x65,
	0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x4f, 0x52, 0x52, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4f, 0x55, 0x42, 0x54, 0x46, 0x55, 0x4c, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x45, 0x52, 0x56, 0x4f, 0x55, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x41, 0x4e, 0x58, 0x49, 0x4f, 0x55, 0x53, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x45,
	0x52, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x4e,
	0x49, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x4f, 0x52, 0x52, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x53, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x45, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x46, 0x55, 0x53, 0x45,
	0x44, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x52, 0x45, 0x53, 0x53, 0x45, 0x44, 0x10,
	0x09, 0x22, 0xf5, 0x01, 0x0a, 0x07, 0x53, 0x61, 0x64, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a,
	0x07, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x53, 0x61, 0x64, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x46,
	0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xa1, 0x01, 0x0a, 0x07, 0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e,
	0x67, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x4e, 0x45, 0x4c, 0x59, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x52, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x47, 0x4c, 0x4f, 0x4f, 0x4d, 0x59, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49,
	0x53, 0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x48, 0x4f, 0x50, 0x45, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x52,
	0x49, 0x45, 0x56, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x48, 0x41, 0x50,
	0x50, 0x59, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x53, 0x54, 0x10, 0x07, 0x12, 0x0c,
	0x0a, 0x08, 0x54, 0x52, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x45, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x49,
	0x53, 0x45, 0x52, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0a, 0x22, 0x85, 0x02, 0x0a, 0x07, 0x44, 0x69,
	0x73, 0x67, 0x75, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x44,
	0x69, 0x73, 0x67, 0x75, 0x73, 0x74, 0x2e, 0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x07,
	0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xb1, 0x01,
	0x0a, 0x07, 0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53,
	0x4c, 0x49, 0x4b, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x56, 0x55, 0x4c, 0x53,
	0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x4f, 0x41, 0x54, 0x48, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x53, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56,
	0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x46, 0x46, 0x45, 0x4e, 0x44, 0x45,
	0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x4f, 0x52, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x43, 0x4f, 0x4d, 0x46, 0x4f, 0x52, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x41, 0x55, 0x53, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x53, 0x54, 0x55, 0x52, 0x42, 0x45,
	0x44, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x41,
	0x4c, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x0b, 0x22, 0xf7, 0x01, 0x0a, 0x09, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x32, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x65, 0x65, 0x6c,
	0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x9f, 0x01, 0x0a, 0x07, 0x46, 0x65,
	0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x45,
	0x53, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x52, 0x45, 0x4c, 0x49, 0x45, 0x46, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x4e, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x4d, 0x55, 0x53, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4f,
	0x59, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x52, 0x49, 0x44, 0x45, 0x10, 0x06, 0x12, 0x0e,
	0x0a, 0x0a, 0x45, 0x58, 0x43, 0x49, 0x54, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x09,
	0x0a, 0x05, 0x50, 0x45, 0x41, 0x43, 0x45, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x41, 0x54,
	0x49, 0x53, 0x46, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x43,
	0x4f, 0x4d, 0x50, 0x41, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x32, 0xe2, 0x01, 0x0a, 0x04,
	0x53, 0x65, 0x6c, 0x66, 0x12, 0x2a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0e,
	0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x0e,
	0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x22, 0x00,
	0x12, 0x2a, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x0c, 0x2e, 0x6d,
	0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0e, 0x2e, 0x6d, 0x6f, 0x6f,
	0x64, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x46,
	0x65, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x0e, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x4f,
	0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x0e, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x6c, 0x69,
	0x6e, 0x67, 0x1a, 0x0e, 0x2e, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x6c, 0x69,
	0x6e, 0x67, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x6d,
	0x6f, 0x6f, 0x64, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x12, 0x2e, 0x6d, 0x6f, 0x6f,
	0x64, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x00,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x6d, 0x6f, 0x6f, 0x64, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_self_proto_rawDescOnce sync.Once
	file_self_proto_rawDescData = file_self_proto_rawDesc
)

func file_self_proto_rawDescGZIP() []byte {
	file_self_proto_rawDescOnce.Do(func() {
		file_self_proto_rawDescData = protoimpl.X.CompressGZIP(file_self_proto_rawDescData)
	})
	return file_self_proto_rawDescData
}

var file_self_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_self_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_self_proto_goTypes = []interface{}{
	(Anger_Feeling)(0),     // 0: moody.Anger.Feeling
	(Fear_Feeling)(0),      // 1: moody.Fear.Feeling
	(Sadness_Feeling)(0),   // 2: moody.Sadness.Feeling
	(Disgust_Feeling)(0),   // 3: moody.Disgust.Feeling
	(Enjoyment_Feeling)(0), // 4: moody.Enjoyment.Feeling
	(*Feeling)(nil),        // 5: moody.Feeling
	(*Overall)(nil),        // 6: moody.Overall
	(*Query)(nil),          // 7: moody.Query
	(*Complicated)(nil),    // 8: moody.Complicated
	(*Anger)(nil),          // 9: moody.Anger
	(*Fear)(nil),           // 10: moody.Fear
	(*Sadness)(nil),        // 11: moody.Sadness
	(*Disgust)(nil),        // 12: moody.Disgust
	(*Enjoyment)(nil),      // 13: moody.Enjoyment
}
var file_self_proto_depIdxs = []int32{
	13, // 0: moody.Feeling.enjoyment:type_name -> moody.Enjoyment
	9,  // 1: moody.Feeling.anger:type_name -> moody.Anger
	10, // 2: moody.Feeling.fear:type_name -> moody.Fear
	11, // 3: moody.Feeling.sadness:type_name -> moody.Sadness
	12, // 4: moody.Feeling.disgust:type_name -> moody.Disgust
	5,  // 5: moody.Query.feeling:type_name -> moody.Feeling
	6,  // 6: moody.Query.overall:type_name -> moody.Overall
	5,  // 7: moody.Complicated.feeling:type_name -> moody.Feeling
	0,  // 8: moody.Anger.feeling:type_name -> moody.Anger.Feeling
	1,  // 9: moody.Fear.feeling:type_name -> moody.Fear.Feeling
	2,  // 10: moody.Sadness.feeling:type_name -> moody.Sadness.Feeling
	3,  // 11: moody.Disgust.feeling:type_name -> moody.Disgust.Feeling
	4,  // 12: moody.Enjoyment.feeling:type_name -> moody.Enjoyment.Feeling
	5,  // 13: moody.Self.Create:input_type -> moody.Feeling
	7,  // 14: moody.Self.Retrieve:input_type -> moody.Query
	5,  // 15: moody.Self.Update:input_type -> moody.Feeling
	5,  // 16: moody.Self.Delete:input_type -> moody.Feeling
	7,  // 17: moody.Self.List:input_type -> moody.Query
	6,  // 18: moody.Self.Create:output_type -> moody.Overall
	5,  // 19: moody.Self.Retrieve:output_type -> moody.Feeling
	6,  // 20: moody.Self.Update:output_type -> moody.Overall
	5,  // 21: moody.Self.Delete:output_type -> moody.Feeling
	8,  // 22: moody.Self.List:output_type -> moody.Complicated
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_self_proto_init() }
func file_self_proto_init() {
	if File_self_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_self_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feeling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_self_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Overall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_self_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_self_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complicated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_self_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Anger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_self_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_self_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sadness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_self_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disgust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_self_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enjoyment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_self_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_self_proto_goTypes,
		DependencyIndexes: file_self_proto_depIdxs,
		EnumInfos:         file_self_proto_enumTypes,
		MessageInfos:      file_self_proto_msgTypes,
	}.Build()
	File_self_proto = out.File
	file_self_proto_rawDesc = nil
	file_self_proto_goTypes = nil
	file_self_proto_depIdxs = nil
}
